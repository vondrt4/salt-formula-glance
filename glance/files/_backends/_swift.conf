{%- from "glance/map.jinja" import server with context %}

{% for reference_key, reference in server.storage.get('swift', {}).get('store', {}).get('references', {}).iteritems() %}
[{{ reference_key }}]
# A project_name user_name pair in the project_name:user_name format to authenticate against the Swift authentication service.
user = {{ reference.user }}

# An authentication key for a user authenticating against the Swift authentication service.
key = {{ reference.key }}

# An address where the Swift authentication service is located.
auth_address = {{ reference.auth.address }}

# A version of the authentication service to use. Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace.
# Optional. Default: 2
auth_version = {{ reference.auth.get('version', '2') }}

{%- if reference.project_domain_id is defined %}
# A domain ID of the project which is the requested project-level authorization scope.
# Optional. Default: None
# This option can be specified if ``auth_version` is 3 .`
project_domain_id = {{ reference.project_domain_id }}
{% endif %}

{%- if reference.project_domain_name is defined %}
# A domain name of the project which is the requested project-level authorization scope.
# Optional. Default: None
# This option can be specified if ``auth_version` is 3 .`
project_domain_name = {{ reference.project_domain_name }}
{% endif %}

{%- if reference.user_domain_id is defined %}
# A domain ID of the user which is the requested domain-level authorization scope.
# Optional. Default: None
# This option can be specified if ``auth_version` is 3 .`
user_domain_id = {{ reference.user_domain_id }}
{% endif %}

{%- if reference.user_domain_name is defined %}
# A domain name of the user which is the requested domain-level authorization scope.
# Optional. Default: None
# This option can be specified if ``auth_version` is 3. `
user_domain_name = {{ reference.user_domain_name }}
{% endif %}

{% endfor %}
